import numpy as np
#impulse response
h = [1,2,3,3,2,1];
#input response
x = [1,2,3,4,5];
y = np.convolve(x,h,mode=’full’)
print('Linear convolution using NumPy built
#Results
Linear convolution using NumPy built
5]
(b) # Python program to compute circular convolution of two arrays
Experiment 5
result by analytical calculation.
L-point vector, y, has length N+L
the DFTs, retain only the first
built-in function output response y=\n',y)
built-in function output response y= [ 1 4 10 19 30 36 35 26 14
19
output for any
L-1.For the
e
20
import numpy as np
#impulse response
h = [1,2,3,4,5];
#input response
x = [1,2,1];
# Pad sequences to the same length
N=max(len(x), len(h))
x_padded = np.pad(x, (0, N-len(x), mode=’constant’)
h_padded= np.pad(h, (0, N-len(h), mode=’constant’)
# Perform circular convolution using np.fft.ifft()
X = np.fft.fft(x_padded)
H = np.fft.fft(h_padded)
Y = np.fft.ifft(X * H
